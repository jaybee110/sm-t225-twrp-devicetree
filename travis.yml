os: linuxos: linux
dist: bionicdist: bionic
language: genericlanguage: generic
sudo: requiredsudo: required
git:git:
  depth: 1  depth: 1
addons:addons:
  apt:  apt:
    update:    update:
      - true      - true
services:services:
  - docker  - docker
before_install:before_install:
  - docker pull fr3akyphantom/droid-builder:latest  - docker pull fr3akyphantom/droid-builder:latest
before_script:before_script:
  - cd $HOME && mkdir twrp  - cd $HOME && mkdir twrp
  # download the TWRP Compressed Source Files from PhantomZone54's Release  # download the TWRP Compressed Source Files from PhantomZone54's Release
  # Uncomment & Use below line If Building for Lollipop-based Devices  # Uncomment & Use below line If Building for Lollipop-based Devices
  # - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-5.1-norepo-20200222.tar.xz"  # - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-5.1-norepo-20200222.tar.xz"
  # Use below line If Building for Marshmallow-based Devices  # Use below line If Building for Marshmallow-based Devices
  - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-6.0-norepo-20200222.tar.xz"  - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-6.0-norepo-20200222.tar.xz"
  # Uncomment & Use below line If Building for Nougat-based Devices  # Uncomment & Use below line If Building for Nougat-based Devices
  # - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-7.1-norepo-20200222.tar.xz"  # - TWRP_SOURCE="https://github.com/PhantomZone54/twrp_sources_norepo/releases/download/v3.3.1-20200222/MinimalOmniRecovery-twrp-7.1-norepo-20200222.tar.xz"
  - wget -q ${TWRP_SOURCE} -O $HOME/twrp.tar.xz  - wget -q ${TWRP_SOURCE} -O $HOME/twrp.tar.xz
  - tar -xJf twrp.tar.xz --directory $HOME/twrp/ && rm twrp.tar.xz  - tar -xJf twrp.tar.xz --directory $HOME/twrp/ && rm twrp.tar.xz
script:script:
  # Replace your $$USERNAME$$, $$REPO_URL$$, $$BRAND$$, $$DEVICE$$  # Replace your $$USERNAME$$, $$REPO_URL$$, $$BRAND$$, $$DEVICE$$
  - cd $HOME/twrp/ && git clone https://github.com/$$USERNAME$$/$$REPO_URL$$.git device/$$BRAND$$/$$DEVICE$$  - cd $HOME/twrp/ && git clone https://github.com/$$USERNAME$$/$$REPO_URL$$.git device/$$BRAND$$/$$DEVICE$$
  - rm -rf bootable/recovery && git clone https://github.com/omnirom/android_bootable_recovery -b android-9.0 --depth 1 bootable/recovery  - rm -rf bootable/recovery && git clone https://github.com/omnirom/android_bootable_recovery -b android-9.0 --depth 1 bootable/recovery
  - |  - |
    docker run --rm -i -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -v "$(pwd):/home/builder/twrp/:rw,z" -v "${HOME}/.ccache:/srv/ccache:rw,z" fr3akyphantom/droid-builder bash << EOF    docker run --rm -i -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -v "$(pwd):/home/builder/twrp/:rw,z" -v "${HOME}/.ccache:/srv/ccache:rw,z" fr3akyphantom/droid-builder bash << EOF
    cd /home/builder/twrp/    cd /home/builder/twrp/
    source build/envsetup.sh    source build/envsetup.sh
    # Choose build flavor as "eng" or "userdebug"    # Choose build flavor as "eng" or "userdebug"
    BUILD_FLAVOR="eng"    BUILD_FLAVOR="eng"
    lunch omni_$$DEVICE$$-${BUILD_FLAVOR}    lunch omni_$$DEVICE$$-${BUILD_FLAVOR}
    make -j$(nproc --all) recoveryimage    make -j$(nproc --all) recoveryimage
    exit    exit
    EOF    EOF
after_success:after_success:
  - export version=$(cat bootable/recovery/variables.h | grep "define TW_MAIN_VERSION_STR" | cut -d '"' -f2)  - export version=$(cat bootable/recovery/variables.h | grep "define TW_MAIN_VERSION_STR" | cut -d '"' -f2)
  - cp $HOME/twrp/out/target/product/$$DEVICE$$/recovery.img $HOME/twrp/TWRP-$version-$$DEVICE$$-$(date +"%Y%m%d")-Unofficial.img  - cp $HOME/twrp/out/target/product/$$DEVICE$$/recovery.img $HOME/twrp/TWRP-$version-$$DEVICE$$-$(date +"%Y%m%d")-Unofficial.img
  - cd $HOME/twrp/  - cd $HOME/twrp/
  # Optional: You might need to switch from https://transfer.sh to https://file.io  # Optional: You might need to switch from https://transfer.sh to https://file.io
  # - curl -s --upload-file TWRP-$version-$$DEVICE$$-$(date +"%Y%m%d")-Unofficial.img https://transfer.sh/ && echo ""  # - curl -s --upload-file TWRP-$version-$$DEVICE$$-$(date +"%Y%m%d")-Unofficial.img https://transfer.sh/ && echo ""
deploy:deploy:
  skip_cleanup: true  skip_cleanup: true
  provider: releases  provider: releases
  # The secret api_key will be loaded from the environment variables  # The secret api_key will be loaded from the environment variables
  api_key: $GitOAUTHToken  api_key: $GitOAUTHToken
  file_glob: true  file_glob: true
  file: $HOME/twrp/*.img  file: $HOME/twrp/*.img
  on:  on:
    tags: false    tags: false
    repo: $$USERNAME$$/$$REPO_URL$$ # Optional: If you want to deploy on different repository    repo: $$USERNAME$$/$$REPO_URL$$ # Optional: If you want to deploy on different repository
    branch: master # Optional: Needs to be exact as the config branch    branch: master # Optional: Needs to be exact as the config branch
branches:branches:
  only:  only:
    - master # Set travis builder branch(es) names    - master # Set travis builder branch(es) names
  except:  except:
    - /^(?i:untagged)-.*$/    - /^(?i:untagged)-.*$/
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
